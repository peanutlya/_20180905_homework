<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration 
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<classPathEntry location="E:\mavenjar\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar" />
	<context id="MySqlContext"  
	         targetRuntime="MyBatis3"
			 defaultModelType="flat">
        <property name="javaFileEncoding" value="UTF-8"/>

		<!-- 注释 -->
		<commentGenerator >
			<property name="suppressAllComments" value="false"/><!-- 是否取消注释 -->
			<property name="suppressDate" value="false" /> <!-- 是否生成注释代时间戳-->
		</commentGenerator>

		<!-- jdbc连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/mymaven"
                        userId="root"
                        password="123456">
        </jdbcConnection>

		<!-- 生成model模型，对应的包，存放位置可以指定具体的路径 -->
        <javaModelGenerator targetPackage="entity"
        	targetProject="src/main/java">
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true"/>
        </javaModelGenerator>

		<!-- 生成mapper.xml文件 -->
        <sqlMapGenerator targetPackage="mapper"
        	targetProject="src/main/resources">
        	<!-- 是否在当前路径下新加一层schema,eg：
        	   fase路径com.oop.eksp.user.model， 
        	   true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 生成mapper.xml对应client，也就是接口dao -->	
        <javaClientGenerator type="XMLMAPPER" 
        	targetPackage="dao"
        	targetProject="src/main/java">
        <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- 配置表信息 -->	
		<table tableName="t_user" domainObjectName="User">
			<!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample 
				是否生成 example类   -->
			
			<!-- 忽略列，不生成bean 字段 -->
			<!-- <ignoreColumn column="FRED" /> -->
			<!-- 指定列的java数据类型 -->
	      	<!-- <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /> -->
		</table>
		<table tableName="t_student" domainObjectName="Student">
			<!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
				是否生成 example类   -->

			<!-- 忽略列，不生成bean 字段 -->
			<!-- <ignoreColumn column="FRED" /> -->
			<!-- 指定列的java数据类型 -->
			<!-- <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /> -->
		</table>
    </context>
</generatorConfiguration>